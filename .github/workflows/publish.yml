name: Publish

on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'
    paths:
      - 'src/**'

jobs:
  lookup:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find images
        id: find
        shell: bash
        working-directory: src
        run: |
          set -x
          set -e
          set -o pipefail

          images="$(find . -name "Dockerfile" | sed 's|^\./\([^/]*\)/Dockerfile$|\1|')"
          {
            echo "images-filter<<EOF"
            echo "none: ./**"
            for image in ${images}; do
              echo "${image}: ./**/${image}/**"
            done
            echo "EOF"
          } > $GITHUB_OUTPUT

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: ${{ steps.find.outputs.images-filter }}


  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: lookup
    continue-on-error: true
    strategy:
      matrix:
        images: ${{ fromJSON(needs.lookup.outputs.images) }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ matrix.images != 'none' }}

      - uses: docker/setup-buildx-action@v3
        if: ${{ matrix.images != 'none' }}

      - uses: docker/login-action@v3
        if: ${{ matrix.images != 'none' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        with:
          username: robinthoni
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - id: metadata
        if: ${{ matrix.images != 'none' }}
        working-directory: src/${{matrix.images}}
        run: |
          version=$(cat version)
          version_minor=$(echo "${version}" | cut -d. -f1-2)

          echo "version=${version}" > $GITHUB_OUTPUT
          echo "version_minor=${version_minor}" >> $GITHUB_OUTPUT

      - uses: docker/build-push-action@v6
        if: ${{ matrix.images != 'none' }}
        with:
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: robinthoni/${{matrix.images}}:${{ steps.metadata.outputs.version }} , robinthoni/${{matrix.images}}:${{ steps.metadata.outputs.version_minor }}
          context: src/${{matrix.images}}

  complete-test:
    name: Complete image tests
    if: always() && !failure() && !cancelled()
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - run: |
          exit 0
